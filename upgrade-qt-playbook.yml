---
# initial upgrade playbook, carefully add capabilities
- hosts:        examplehost
  gather_facts: yes
  remote_user:  usadmin
  become:       yes
  
  pre_tasks:
#  - name: System details
#    debug: msg="{{ item }}"
#    with_items:
#      - "{{ ansible_os_family }}"
#      - "{{ ansible_distribution }}"
#      - "{{ ansible_distribution_version }}"
#      - "{{ ansible_distribution_major_version }}"

  - name: get qtinfo
    shell: grep QTDIR /etc/modulefiles/ultrascan/gui-build | awk -F- '{ print $2 }'
    register: qtinfo

  - name: get qwtinfo
    shell: grep QWTDIR /etc/modulefiles/ultrascan/gui-build | awk -F- '{ print $4 }'
    register: qwtinfo

  - name: get mysqlversion
    shell: 'if [ -e /bin/mysql ]; then mysql --version ; else echo "no /bin/mysql found"; fi'
    register: mysqlinfo

  - name: get opensslversion
    shell: openssl version
    register: opensslinfo

  - name: get phpversion
    shell: 'if [ -e /usr/bin/php ]; then php -v ; else echo "no /usr/bin/php found"; fi'
    register: phpinfo

  - name: get mpi version
    shell: if [ -e /etc/modulefiles/mpi/mpich-x86_64 ]; then cmd=`egrep 'prepend-path\s+PATH\s+' /etc/modulefiles/mpi/mpich-x86_64 | awk '{ print $3 }'` && $cmd/mpicc -v; else echo 'no /etc/modulefiles/mpi/x86_64 found'; fi
    register: mpiinfo

  - name: set facts
    set_fact:
      qt_version_ref:  "{{ qtinfo.stdout_lines[0] }}"
      qwt_version_ref: "{{ qwtinfo.stdout_lines[0] }}"
      os_version:  "{{ ansible_distribution }} {{ ansible_distribution_version }}"
      mysql_version: "{{ mysqlinfo.stdout_lines[0] }}"
      openssl_version: "{{ opensslinfo.stdout_lines[0] }}"
      php_version: "{{ phpinfo.stdout_lines[0] }}"
      mpi_version: "{{ mpiinfo.stdout_lines[0] }}"
  - debug: msg="os_version {{ os_version }}\nqt_version_ref {{ qt_version_ref }}\nqwt_version_ref {{ qwt_version_ref }}\nmysql_version {{ mysql_version }}\nopenssl_version {{ openssl_version }}\nphp_version {{ php_version }}\nmpi_version {{ mpi_version }}"

  - name: "check disk space"
    shell: df -h
    register: dfinfo
  - debug: var=dfinfo.stdout_lines

  - name: Warning
    ansible.builtin.debug:
      msg: "*** If you change qt versions, then each users .local needs updating for proper .desktop environment setup ***"

  roles:
  # lims-gui updates the desktop apps for the new path
      - config-lims-gui 
      - build-qt
      - build-qwt
      - build-us3
      - build-us-mpi

  vars:
        # for hardware installs
        # - comp_opt: "-march=native"
        # perhaps for VM installs if qt core dumps
        - comp_opt: "-m64"

        - qt_major_version:  "5.15"
        - qt_version:        "5.15.9"
        - qwt_version:       "6.1.6"
        - cores_for_parallel_compile: "{{ ansible_processor_vcpus }}"
        - us3_branch:        "master"

        - slurm_cores : "{{ ansible_processor_vcpus }}"
        - slurm_sbatch_extras : ""
        # - slurm_sbatch_extras : "#SBATCH -O\n"

# further upgrade thoughts
# us3
# us3-mpi
# qt, qwt (ugh)

